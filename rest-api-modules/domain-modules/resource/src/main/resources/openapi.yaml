openapi: "3.0.0"
info:
  version: 1.0.0
  title: Simple Resources
  license:
    name: MIT
servers:
  - url: http://localhost:8088/
paths:
  /accounts/{accountId}/resources:
    get:
      summary: List all Resources
      operationId: listResourcesByAccountId
      tags:
        - resources         
      parameters:
        - name: accountId
          in:  path
          required: true
          description: The id of the account to retrieve
          schema:
            type: integer
      responses:
        '200':
          description: A paged array of Resources
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Resources"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a Resource
      operationId: createResource
      tags:
        - resources
      parameters:
        - name: accountId
          in:  path
          required: true
          description: The id of the account to retrieve
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/ResourceBody'
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /accounts/{accountId}/resources/{resourceId}:
    get:
      summary: Info for a specific account
      operationId: showResourcesById
      tags:
        - resources
      parameters:
        - name: accountId
          in: path
          required: true
          description: The id of the account to retrieve
          schema:
            type: integer
        - name: resourceId
          in: path
          required: true
          description: The id of the resource to retrieve
          schema:
            type: integer
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Resource"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Resource:
      type: object
      required:
        - accountId
        - id
        - name
      properties:
        accountId:
          type: integer
        id:
          type: integer
        name:
          type: string
    Resources:
      type: array
      items:
        $ref: "#/components/schemas/Resource"
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
  parameters:        
    X-Request-ID:
      name: X-Request-ID
      in: header
      description: >-
        ID of the request, unique to the call, as determined by the initiating
        party.
      required: true
      example: 99391c7e-ad88-49ec-a2ad-99ddcb1f7721
      schema:
        type: string
        format: uuid
  requestBodies:
    ResourceBody:
      description: A JSON object containing account information
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Resource'        
  headers:
    X-Request-ID:
      description: >-
        ID of the request, unique to the call, as determined by the initiating
        party.
      required: true
      example: 99391c7e-ad88-49ec-a2ad-99ddcb1f7721
      schema:
        type: string
        format: uuid
 
        
          